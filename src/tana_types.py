# Generated by https://quicktype.io
#
# To change quicktype's target language, run command:
#
#   "Set quicktype target language"

from enum import Enum
from pydantic import BaseModel, Field
from typing import Optional, Union, List, Dict, Any


class Props(BaseModel):
  created: int
  name: Optional[str]
  description: Optional[str]
  ownerId: Optional[str] = Field(alias='_ownerId')
  metaNodeId: Optional[str] = Field(alias='_metaNodeId')
  docType: Optional[str] = Field(alias='_docType')
  sourceId: Optional[str] = Field(alias='_sourceId')
  view: Optional[str]
  editMode: Optional[bool]
  done: Union[bool, int, None]


class Node(BaseModel):
  id: str
  props: Props
  touchCounts: Optional[List[int]]
  modifiedTs: Optional[List[int]]
  children: Optional[List[str]]
  associationMap: Optional[Dict[str, str]]
  underConstruction: Optional[bool] = Field(alias='_underConstruction')
  inbound_refs: List[str] = []
  outbound_refs: List[str] = []
  color: Optional[str] = None
  

# config for graph visualization.
# By default, we inlucde all linkages
class Visualizer(BaseModel):
  include_tag_tag_links: bool = True
  include_node_tag_links: bool = True
  include_inline_refs: bool = True
  include_inline_ref_nodes: bool = True
  
  # make this hashable
  class Config:
          frozen = True


class TanaDump(BaseModel):
  formatVersion: int
  docs: List[Node]
  editors: List[List[Union[int, str]]]
  workspaces: Dict[str, str]
  lastTxid: int
  lastFbKey: str
  optimisticTransIds: List[Any]
  currentWorkspaceId: str

  visualize: Optional[Visualizer] = None

